{
  "code": "import { CollideGroup } from \"../manager/MapManager\";\r\nimport { Building } from \"./Building\";\r\nimport { Platform } from \"./Platform\";\r\nexport class Ground extends Laya.MeshSprite3D {\r\n    constructor(scene) {\r\n        super();\r\n        this._width = 10;\r\n        this._height = 10;\r\n        this._friction = 2;\r\n        this._restitution = 0;\r\n        this._objList = [];\r\n        this._type = 0;\r\n        this._scene = scene;\r\n        this.meshFilter.sharedMesh = Laya.PrimitiveMesh.createPlane(this._width, this._height, 10, 10);\r\n        this._material = new Laya.BlinnPhongMaterial();\r\n        let tilingOffset = this._material.tilingOffset;\r\n        tilingOffset.setValue(5, 5, 0, 0);\r\n        this._material.tilingOffset = tilingOffset;\r\n        this.meshRenderer.material = this._material;\r\n        Laya.Texture2D.load(\"res/grass.png\", Laya.Handler.create(this, this.onLoadMaterial, null, false));\r\n        this._collide = this.addComponent(Laya.PhysicsCollider);\r\n        this._collide.collisionGroup = CollideGroup.GROUND;\r\n        let planeShape = new Laya.BoxColliderShape(this._width, 0, this._height);\r\n        this._collide.colliderShape = planeShape;\r\n        this._collide.friction = this._friction;\r\n        this._collide.restitution = this._restitution;\r\n    }\r\n    setType(type) {\r\n        this._type = type;\r\n        switch (this._type) {\r\n            case Ground.TYPE_1:\r\n                break;\r\n            case Ground.TYPE_2:\r\n                let platform = new Platform();\r\n                this._objList.push(platform);\r\n                this._scene.addChild(platform);\r\n                let pos1 = platform.transform.position;\r\n                let groundPos = this.transform.position;\r\n                pos1.setValue(groundPos.x, groundPos.y, groundPos.z + 5);\r\n                platform.transform.position = pos1;\r\n                break;\r\n            case Ground.TYPE_3:\r\n                let long = 2 + Math.floor(6 * Math.random());\r\n                let x = -5 + long / 2;\r\n                let hollLong = 2;\r\n                for (let i = 0; i < 2; i++) {\r\n                    let wall = new Building(long, 2, 2);\r\n                    this._objList.push(wall);\r\n                    this._scene.addChild(wall);\r\n                    let pos1 = wall.transform.position;\r\n                    let groundPos = this.transform.position;\r\n                    pos1.setValue(groundPos.x + x, groundPos.y + 1, groundPos.z + 1);\r\n                    wall.transform.position = pos1;\r\n                    let newLong = 10 - long - hollLong;\r\n                    x = -5 + long + hollLong + newLong / 2;\r\n                    long = newLong;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    onLoadMaterial(tex) {\r\n        this._material.albedoTexture = tex;\r\n    }\r\n    clear() {\r\n        for (let i = 0; i < this._objList.length; i++) {\r\n            let building = this._objList[i];\r\n            building && building.clear();\r\n        }\r\n        this._objList.length = 0;\r\n        this.removeSelf();\r\n    }\r\n}\r\nGround.TYPE_1 = 0;\r\nGround.TYPE_2 = 1;\r\nGround.TYPE_3 = 2;\r\n",
  "references": [
    "F:/work/MyGame/BallGame/src/game/manager/MapManager.ts",
    "F:/work/MyGame/BallGame/src/game/scene/Building.ts",
    "F:/work/MyGame/BallGame/src/game/scene/Platform.ts"
  ]
}
