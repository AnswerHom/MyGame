{
  "code": "import { PlayerInfo } from \"../object/player/PlayerInfo\";\r\nimport { BaseCard } from \"../object/card/BaseCard\";\r\nimport { CardConfig } from \"../object/card/CardConfig\";\r\nimport { MathU } from \"../utils/MathU\";\r\nexport class GameManager {\r\n    constructor() {\r\n        this.curPlayerCount = 0;\r\n    }\r\n    initGame(count) {\r\n        this.curPlayerCount = count;\r\n        this.players = [];\r\n        for (let i = 0; i < count; i++) {\r\n            let info = new PlayerInfo();\r\n            info.index = i;\r\n            this.players.push(info);\r\n        }\r\n        this.initCard(count);\r\n        this.dealCard();\r\n        for (let i = 0; i < count; i++) {\r\n            let player = this.players[i];\r\n            player.showHand();\r\n        }\r\n    }\r\n    initCard(count) {\r\n        this.cardsPool = [];\r\n        let randomCount = 0;\r\n        this.cardsPool.push(this.createCard(CardConfig.TYPE_DYFXZ));\r\n        this.cardsPool.push(this.createCard(CardConfig.TYPE_FR));\r\n        switch (count) {\r\n            case 3:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                randomCount = 8;\r\n                break;\r\n            case 4:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                randomCount = 11;\r\n                break;\r\n            case 5:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                randomCount = 14;\r\n                break;\r\n            case 6:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                randomCount = 16;\r\n                break;\r\n            case 7:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                randomCount = 19;\r\n                break;\r\n            case 8:\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_ZT));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_BZCZM));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                this.cardsPool.push(this.createCard(CardConfig.TYPE_GF));\r\n                randomCount = 19;\r\n                break;\r\n        }\r\n        if (randomCount >= CardConfig.RANDOM_POOL.length) {\r\n            for (let i = 0; i < randomCount; i++) {\r\n                this.cardsPool.push(this.createCard(CardConfig.RANDOM_POOL[i]));\r\n            }\r\n        }\r\n        else {\r\n            let idxArr = MathU.randomRangeArr(0, CardConfig.RANDOM_POOL.length - 1, randomCount);\r\n            for (let i = 0; i < randomCount; i++) {\r\n                let idx = idxArr[i];\r\n                this.cardsPool.push(this.createCard(CardConfig.RANDOM_POOL[idx]));\r\n            }\r\n        }\r\n    }\r\n    dealCard() {\r\n        if (!this.players || this.players.length <= 0)\r\n            return;\r\n        let count = this.players.length;\r\n        let idxArr = MathU.randomRangeArr(0, this.cardsPool.length - 1, count * GameManager.PLAYER_CARD_COUNT);\r\n        for (let i = 0; i < count; i++) {\r\n            let player = this.players[i];\r\n            player.cards = [];\r\n            player.cards.push(this.cardsPool[idxArr[4 * i]]);\r\n            player.cards.push(this.cardsPool[idxArr[4 * i + 1]]);\r\n            player.cards.push(this.cardsPool[idxArr[4 * i + 2]]);\r\n            player.cards.push(this.cardsPool[idxArr[4 * i + 3]]);\r\n        }\r\n    }\r\n    createCard(type) {\r\n        let card = new BaseCard();\r\n        card.type = type;\r\n        return card;\r\n    }\r\n}\r\nGameManager.PLAYER_CARD_COUNT = 4;\r\n",
  "references": [
    "D:/work/MyGame/PrisonerGame/PrisonerGame/src/object/player/PlayerInfo.ts",
    "D:/work/MyGame/PrisonerGame/PrisonerGame/src/object/card/BaseCard.ts",
    "D:/work/MyGame/PrisonerGame/PrisonerGame/src/object/card/CardConfig.ts",
    "D:/work/MyGame/PrisonerGame/PrisonerGame/src/utils/MathU.ts"
  ]
}
